package bishi;
/*Ｎ个米兔围成一个圆圈，每个米兔带着一顶具有颜色的帽子（白色，或被涂上若干鲜艳的颜色－一顶帽子可以是多个颜色混合的）。
 为了使围成的圆圈整体颜色看起来不那么单调，现在要求，任意一种颜色（不包含白色），
 在任意连续的m个米兔里至多出现一次（注意：这里圆环是一个首位相连的环形）。帽子的颜色一共有c种（不包括白色）。
现在按顺时针序告诉你n个米兔帽子的颜色。请你帮忙判断围成的圆圈中有多少种颜色不符合要求。
（即有多少种颜色在任意连续m个彩色帽子中出现了至少两次）。

输入描述
第一行输入n，m，c三个数，用空格隔开。(1 <= n <= 10000, 1 < m <= 1000, 1 <= c <= 100)
 接下来n行每行的第一个数num_i(0 <= num_i <= c)表示第i个米兔的帽子有多少种颜色。接下来依次读入每个帽子的颜色标记。如：
3 2 3      //3个米兔　区间为2　3中颜色（不含白色）
 3 1 2 3  //第一个米兔，帽子上涂有３中颜色
0            //第二个米兔，白色帽子
 2 2 3     //第三个米兔，帽子上涂有２个颜色
输出描述
一个非负整数，表示该圆盘上有多少种颜色不符需求。上例中，结果为：2
*/

import java.util.Scanner;

public class MiTuColor {
    public static void main(String[] args){
        Scanner in = new Scanner(System.in);
        int n, m, c, res;
        n = in.nextInt();
        m = in.nextInt();
        c = in.nextInt();



        System.out.println(0);
    }
}
